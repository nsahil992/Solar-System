name: Solar System Workflow

on: 
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'
env:
  MONGO_URL: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ vars.MONGO_PASSWORD }}
jobs: 
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
                nodejs_version: [18, 19, 20]
                operating_system: [ubuntu-latest]
                exclude: 
                    - nodejs_version: 18
                      operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}
        steps: 
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.nodejs_version}}

        - name: Install dependencies
          run: npm install 

        - name: Unit Testing
          run: npm test

    docker: 
        name: Containerization
        needs: unit-testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: DockerHub Login
          uses: docker/login-action@v3.3.0
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PAT }}

        - name: Build Docker Image for Testing
          uses: docker/build-push-action@v4
          with: 
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

        - name: Push Docker Image 
          uses: docker/build-push-action@v4
          with: 
            context: .
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            
    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Install Kubectl cli
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.26.0'

        - name: Set Kubeconfig
          uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}

        - name: Fetch the cluster details
          run: |
            kubectl version --short
            echo -------------------------
            kubectl get nodes
